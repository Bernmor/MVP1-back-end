{
  "swagger": "2.0",
  "info": {
    "description": "Movie Dashboard API - A Personal Movie Tracking Dashboard",
    "version": "1.0.0",
    "title": "Movie Dashboard API"
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [
    {
      "name": "users",
      "description": "Operations about users"
    },
    {
      "name": "movies",
      "description": "Operations about movies"
    },
    {
      "name": "watchlist",
      "description": "Operations for managing watchlist"
    },
    {
      "name": "watched",
      "description": "Operations for managing watched movies"
    },
    {
      "name": "stats",
      "description": "Operations for viewing user statistics"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "description": "Returns a list of all users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "description": "Creates a new user in the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Username already exists"
          }
        }
      }
    },
    "/movies": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Get all movies",
        "description": "Returns a list of all movies",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Movie"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of the user performing the action"
          }
        ]
      },
      "post": {
        "tags": [
          "movies"
        ],
        "summary": "Create a new movie",
        "description": "Creates a new movie in the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Movie object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovieInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie created",
            "schema": {
              "$ref": "#/definitions/Movie",
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "title": {
                  "type": "string"
                },
                "genre": {
                  "type": "string"
                },
                "director": {
                  "type": "string"
                },
                "year": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "cover": {
                  "type": "string"
                },
                "watchlist_item_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/movies/{movieId}": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Get movie by ID",
        "description": "Returns a single movie with its details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "ID of movie to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of the user performing the action"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MovieDetail"
            }
          },
          "404": {
            "description": "Movie not found"
          },
          "403": {
            "description": "Unauthorized access to this movie"
          }
        }
      },
      "delete": {
        "tags": [
          "movies"
        ],
        "summary": "Delete movie",
        "description": "Deletes a movie",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "movieId",
            "in": "path",
            "description": "ID of movie to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of the user performing the deletion"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie deleted successfully"
          },
          "404": {
            "description": "Movie not found"
          },
          "403": {
            "description": "Unauthorized to delete this movie"
          }
        }
      }
    },
    "/users/{userId}/watchlist": {
      "get": {
        "tags": [
          "watchlist"
        ],
        "summary": "Get user's watchlist",
        "description": "Returns a list of movies in the user's watchlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to get watchlist for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WatchlistItem"
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/watchlist/{itemId}": {
      "delete": {
        "tags": [
          "watchlist"
        ],
        "summary": "Remove from watchlist",
        "description": "Removes a movie from the user's watchlist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to remove watchlist item for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of watchlist item to remove",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie removed from watchlist"
          },
          "404": {
            "description": "Watchlist item not found"
          }
        }
      }
    },
    "/users/{userId}/watched": {
      "get": {
        "tags": [
          "watched"
        ],
        "summary": "Get user's watched movies",
        "description": "Returns a list of movies the user has watched",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to get watched movies for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WatchedItem"
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "tags": [
          "watched"
        ],
        "summary": "Mark movie as watched",
        "description": "Marks a movie as watched by the user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to mark movie as watched for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Details for the watched movie",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "movie_id"
              ],
              "properties": {
                "movie_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "rating": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 5
                },
                "notes": {
                  "type": "string"
                },
                "date_watched": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie marked as watched"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User or movie not found"
          }
        }
      }
    },
    "/users/{userId}/watched/{itemId}": {
      "delete": {
        "tags": [
          "watched"
        ],
        "summary": "Remove from watched list",
        "description": "Removes a movie from the user's watched list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to remove watched item for",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of watched item to remove",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie removed from watched list"
          },
          "404": {
            "description": "Watched item not found"
          }
        }
      }
    },
    "/users/{userId}/stats": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Get user statistics",
        "description": "Returns movie statistics for a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to get statistics for",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserStats"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "watchlist_count": {
          "type": "integer"
        },
        "watched_count": {
          "type": "integer"
        },
        "stats": {
          "$ref": "#/definitions/UserStats"
        }
      }
    },
    "UserInput": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "Movie": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "director": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "cover": {
          "type": "string"
        },
        "added_by": {
          "type": "string"
        },
        "watch_count": {
          "type": "integer"
        }
      }
    },
    "MovieDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "director": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "cover": {
          "type": "string"
        },
        "added_by": {
          "type": "string"
        },
        "genres": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "watch_count": {
          "type": "integer"
        }
      }
    },
    "MovieInput": {
      "type": "object",
      "required": [
        "title",
        "genre",
        "director",
        "year",
        "description",
        "user_id"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "genre": {
          "type": "string",
          "description": "Comma-separated list of genres"
        },
        "director": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "cover": {
          "type": "string",
          "description": "URL to movie poster image"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WatchlistItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "movie_id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "director": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "genre": {
          "type": "string"
        },
        "cover": {
          "type": "string"
        },
        "date_added": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WatchedItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "movie_id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "director": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "genre": {
          "type": "string"
        },
        "cover": {
          "type": "string"
        },
        "date_watched": {
          "type": "string",
          "format": "date-time"
        },
        "rating": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "UserStats": {
      "type": "object",
      "properties": {
        "total_watched": {
          "type": "integer"
        },
        "watchlist_count": {
          "type": "integer"
        },
        "average_rating": {
          "type": "number",
          "format": "float"
        },
        "genres": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          },
          "description": "Count of watched movies by genre"
        },
        "recently_watched": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "title": {
                "type": "string"
              },
              "date_watched": {
                "type": "string",
                "format": "date-time"
              },
              "rating": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5
              }
            }
          }
        }
      }
    }
  }
}